<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">
      
       <!-- 指定spring 框架要扫描的包结构 -->
       <context:component-scan base-package="com"/>
       <!-- 加载configs.properties :
            1)系统底层会读取配置文件configs.properties
            2)系统底层会将配置文件内容封装到Properties对象
            3)系统底层将Properties对象交给Spring容器进行管理-->
       <util:properties id="cfg" 
             location="classpath:configs.properties"/>
       <!--
       这种方式和上面的util类型，都可以装载属性配置文件，不过当前这种用法，在取数据时不一样
       本质：new ClassPathApplicationContext("spring-config.xml").getEnvironment().getProperty("jdbcDriver")
       ${jdbcDriver} 区别 ${cfg.jdbcDriver}
       <context:property-placeholder location="classpath:configs.properties" ignore-resource-not-found="true"/>
       -->
       <!-- 加载spring-model.xml(此配置文件中要配置
            service,dao,datasource,mybatis) -->
       <import resource="classpath:spring/spring-model.xml"/>
       <!-- 加载spring-web.xml -->
       <import resource="classpath:spring/spring-web.xml"/>
       
       <!-- 启用AOP -->
       <aop:aspectj-autoproxy/>
       
</beans>





